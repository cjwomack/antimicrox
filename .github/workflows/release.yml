name: Release
on:
    workflow_dispatch:

jobs:
    # Build .deb files for debian-based systems
    build-windows-packages:
        name: Create Windows packages
        runs-on: windows-2019
        defaults:
            run:
                shell: msys2 {0}

        steps:
            - uses: actions/checkout@v3
            
            - name: 32bit_python
              uses: actions/setup-python@v4
              with:
                  python-version: '3.7.9'
                  architecture: 'x86'
            
            - name: Install Dependencies
              uses: msys2/setup-msys2@v2
              with:
                  install: >-
                      mingw-w64-i686-toolchain
                      mingw-w64-i686-ninja
                      mingw-w64-i686-nsis
                      mingw-w64-i686-openssl
                  msystem: mingw32
                  release: false
            # mingw-w64-x86_64-SDL2 not installed above because of: https://github.com/AntiMicroX/antimicrox/issues/465
            # SDL2 version for release locked
            - name: Install sdl2
              run: |
                curl -L -o mingw-w64-i686-SDL2-2.0.20-1-any.pkg.tar.zst https://mirror.msys2.org/mingw/mingw32/mingw-w64-i686-SDL2-2.0.20-1-any.pkg.tar.zst
                pacman --noconfirm -U mingw-w64-i686-SDL2-2.0.20-1-any.pkg.tar.zst

            - name: Install Qt
              uses: jurplel/install-qt-action@v2
              with:
                  version: "5.15.2"
                  host: "windows"
                  target: "desktop"
                  arch: "win32_mingw81"
                  setup-python: "true"
                  dir: "${{ github.workspace }}/qt/"
                  install-deps: "true"

            - name: Configure CMake
              run: cmake -DCMAKE_BUILD_TYPE=Release -B "${{ github.workspace }}/build" ${{ matrix.cmake-args }}
              env:
                  CMAKE_PREFIX_PATH: ${{env.Qt5_Dir}}
                  WORKSPACE_DIR: ${{ github.workspace }}

            - name: Build Installer
              run: cmake --build "${{ github.workspace }}/build" --parallel 8

            - name: View directory
              shell: pwsh
              working-directory: "${{ github.workspace }}"
              run: |
                tree /F ${{ github.workspace }}

            - name: Upload binaries to release
              uses: AButler/upload-release-assets@v2.0
              with:
                  files: ${{ github.workspace }}/bin/*
                  repo-token: ${{ github.token }}
